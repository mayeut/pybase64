name: Build and upload to PyPI

on:
  push:
    tags:
      - '**'
    branches-ignore:
      - "dependabot/**"
  pull_request:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: pre-commit/action@v3.0.0

  build_wheels:
    name: Build ${{ matrix.archs }} ${{ matrix.build }} wheels on ${{ matrix.os }}
    needs: [lint]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        archs: ["x86_64, i686", "aarch64", "ppc64le", "s390x"]
        build: ["manylinux", "musllinux"]
        include:
          - os: windows-2019
            archs: "AMD64"
          - os: windows-2019
            archs: "x86"
          - os: windows-2019
            archs: "ARM64"
          - os: macos-11
            archs: "x86_64, arm64"

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.2.0
        if: runner.os == 'Linux'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.14.1
        env:
          CIBW_ARCHS: "${{ matrix.archs }}"
          CIBW_BUILD: "${{ matrix.build && '*-' || ''}}${{ matrix.build }}*"
          CIBW_PRERELEASE_PYTHONS: "${{ !startsWith(github.ref, 'refs/tags/v') }}"

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    needs: [lint]
    runs-on: ubuntu-22.04
    env:
      CIBUILDWHEEL: 1  # make C extension mandatory
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.11"

      - name: Install
        run: python -m pip install ${{ github.workspace }}/dist/pybase64*.tar.gz
        working-directory: "${{ runner.temp }}"

      - name: Test
        run: |
          python -m pip install -r requirements-test.txt
          pytest

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to (Test) PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && github.repository == 'mayeut/pybase64'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Upload to Test PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.8
        with:
          user: __token__
          password: ${{ secrets.pypi_test_password }}
          skip_existing: true
          repository_url: https://test.pypi.org/legacy/

      - name: Upload to PyPI
        # upload to PyPI on every tag starting with 'v'
        if: startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@v1.8.8
        with:
          user: __token__
          password: ${{ secrets.pypi_release_password }}
          skip_existing: true
